"""Implemented best practice for organizing product types and attributes

Revision ID: ae7d3fc15970
Revises: f2482c2f3fce
Create Date: 2016-11-13 00:11:03.939751

"""

# revision identifiers, used by Alembic.
revision = 'ae7d3fc15970'
down_revision = 'f2482c2f3fce'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('attribute',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_attribute_id'), 'attribute', ['id'], unique=False)
    op.create_index(op.f('ix_attribute_name'), 'attribute', ['name'], unique=False)
    op.create_table('product_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_product_type_id'), 'product_type', ['id'], unique=False)
    op.create_index(op.f('ix_product_type_name'), 'product_type', ['name'], unique=False)
    op.create_table('attribute_value',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('attribute_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['attribute_id'], ['attribute.id'], onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_attribute_value_id'), 'attribute_value', ['id'], unique=False)
    op.create_index(op.f('ix_attribute_value_name'), 'attribute_value', ['name'], unique=False)
    op.create_table('product_attribute_values',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('attribute_value_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['attribute_value_id'], ['attribute_value.id'], onupdate='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_product_attribute_values_id'), 'product_attribute_values', ['id'], unique=False)
    op.create_table('product_type_attribute_value',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_type_id', sa.Integer(), nullable=True),
    sa.Column('attribute_value_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['attribute_value_id'], ['attribute_value.id'], onupdate='CASCADE'),
    sa.ForeignKeyConstraint(['product_type_id'], ['product_type.id'], onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_product_type_attribute_value_id'), 'product_type_attribute_value', ['id'], unique=False)
    op.drop_table('products_product_attributes')
    op.drop_table('catalog_product_attribute')
    op.add_column('product', sa.Column('product_type_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_product_slug_name'), 'product', ['slug_name'], unique=True)
    op.drop_index('ix_product_description', table_name='product')
    op.drop_index('ix_product_name', table_name='product')
    op.drop_constraint('product_slug_name_key', 'product', type_='unique')
    op.create_foreign_key(None, 'product', 'product_type', ['product_type_id'], ['id'], onupdate='CASCADE')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'product', type_='foreignkey')
    op.create_unique_constraint('product_slug_name_key', 'product', ['slug_name'])
    op.create_index('ix_product_name', 'product', ['name'], unique=False)
    op.create_index('ix_product_description', 'product', ['description'], unique=False)
    op.drop_index(op.f('ix_product_slug_name'), table_name='product')
    op.drop_column('product', 'product_type_id')
    op.create_table('catalog_product_attribute',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('product_attribute_id_seq'::regclass)"), nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='catalog_product_attribute_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('products_product_attributes',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('products_product_attributes_id_seq'::regclass)"), nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('catalog_product_attribute_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('attribute_value', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['catalog_product_attribute_id'], ['catalog_product_attribute.id'], name='products_product_attributes_catalog_product_attribute_id_fkey', onupdate='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name='products_product_attributes_product_id_fkey', onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='products_product_attributes_pkey')
    )
    op.drop_index(op.f('ix_product_type_attribute_value_id'), table_name='product_type_attribute_value')
    op.drop_table('product_type_attribute_value')
    op.drop_index(op.f('ix_product_attribute_values_id'), table_name='product_attribute_values')
    op.drop_table('product_attribute_values')
    op.drop_index(op.f('ix_attribute_value_name'), table_name='attribute_value')
    op.drop_index(op.f('ix_attribute_value_id'), table_name='attribute_value')
    op.drop_table('attribute_value')
    op.drop_index(op.f('ix_product_type_name'), table_name='product_type')
    op.drop_index(op.f('ix_product_type_id'), table_name='product_type')
    op.drop_table('product_type')
    op.drop_index(op.f('ix_attribute_name'), table_name='attribute')
    op.drop_index(op.f('ix_attribute_id'), table_name='attribute')
    op.drop_table('attribute')
    ### end Alembic commands ###
